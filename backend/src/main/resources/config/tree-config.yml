treeConfigs:
  POSTGRESQL:
    defaultIcon: "pgsql_icon.svg"
    defaultActions:
      primary: { label: "Âà∑Êñ∞", icon: "üîÑ", handler: "refreshNode" }
      menu:
        - { label: "Â±ûÊÄß", icon: "‚ÑπÔ∏è", handler: "showProperties" }

    nodes:
      roles_aggregate:
        parent: null
        virtual: true
        type: "roles"
        label: "Login/Group Roles"
        position: 1
        children: { users: "users_real" }
        actions:
          menu:
            - { label: "Êñ∞Âª∫ËßíËâ≤", icon: "‚ûï", handler: "createRole" }

      databases_aggregate:
        parent: null
        virtual: true
        type: "databases"
        label: "Databases"
        position: 2
        nextLevel: "dbs_real"
        actions:
          menu:
            - { label: "Êñ∞Âª∫Êï∞ÊçÆÂ∫ì", icon: "‚ûï", handler: "createNewDatabase" }

      dbs_real:
        parent: "databases_aggregate"
        virtual: false
        type: "database"
        icon: "db_icon.svg"
        sqlQuery: |
          SELECT datname AS name, datname AS id
          FROM pg_database
          WHERE datistemplate = false AND datallowconn = true
          ORDER BY datname;
        nextLevel: "db_subs_virtual"

      db_subs_virtual:
        parent: "dbs_real"
        virtual: true
        type: "db_subs"
        label: null
        icon: null
        children:
          casts: "casts_virtual"
          extensions: "extensions_virtual"
          schemas: "schemas_aggregate"

      casts_virtual:
        parent: "db_subs_virtual"
        virtual: true
        type: "casts"
        label: "Casts"
        icon: "casts_icon.svg"
        children: {}

      extensions_virtual:
        parent: "db_subs_virtual"
        virtual: true
        type: "extensions"
        label: "Extensions"
        icon: "extension_icon.svg"
        children: {}

      schemas_aggregate:
        parent: "db_subs_virtual"
        virtual: true
        type: "schemas"
        label: "Schemas"
        icon: "schema_icon.svg"
        nextLevel: "schemas_real"

      schemas_real:
        parent: "schemas_aggregate"
        virtual: false
        type: "schema"
        icon: "schema_icon.svg"
        sqlQuery: |
          SELECT nspname AS name, nspname AS id
          FROM pg_namespace
          WHERE nspname NOT IN ('pg_catalog', 'information_schema')
          ORDER BY nspname;
        nextLevel: "schema_subs_virtual"

      schema_subs_virtual:
        parent: "schemas_real"
        virtual: true
        type: "schema_subs"
        label: null
        icon: null
        children:
          tables: "tables_group"
          views: "views_group"
          functions: "functions_group"

      tables_group:
        parent: "schema_subs_virtual"
        virtual: true
        type: "tables"
        label: "Tables"
        icon: "table_icon.svg"
        nextLevel: "tables_real"

      tables_real:
        parent: "tables_group"
        virtual: false
        type: "table"
        icon: "table_icon.svg"
        sqlQuery: |
          SELECT c.relname AS name, c.relname AS id
          FROM pg_class c
          JOIN pg_namespace n ON n.oid = c.relnamespace
          WHERE c.relkind = 'r'
            AND n.nspname NOT IN ('pg_catalog','information_schema')
          ORDER BY c.relname;

      views_group:
        parent: "schema_subs_virtual"
        virtual: true
        type: "views"
        label: "Views"
        icon: "view_icon.svg"
        nextLevel: "views_real"

      views_real:
        parent: "views_group"
        virtual: false
        type: "view"
        icon: "view_icon.svg"
        sqlQuery: |
          SELECT c.relname AS name, c.relname AS id
          FROM pg_class c
          JOIN pg_namespace n ON n.oid = c.relnamespace
          WHERE c.relkind = 'v'
            AND n.nspname NOT IN ('pg_catalog','information_schema')
          ORDER BY c.relname;

      functions_group:
        parent: "schema_subs_virtual"
        virtual: true
        type: "functions"
        label: "Functions"
        icon: "function_icon.svg"
        nextLevel: "functions_real"

      functions_real:
        parent: "functions_group"
        virtual: false
        type: "function"
        icon: "function_icon.svg"
        sqlQuery: |
          SELECT p.proname AS name, p.oid::text AS id
          FROM pg_proc p
          JOIN pg_namespace n ON n.oid = p.pronamespace
          WHERE n.nspname NOT IN ('pg_catalog','information_schema')
          ORDER BY p.proname;

      users_real:
        parent: "roles_aggregate"
        virtual: false
        type: "role"
        icon: "user_icon.svg"
        sqlQuery: |
          SELECT rolname AS name, rolname AS id
          FROM pg_roles
          ORDER BY rolname;
